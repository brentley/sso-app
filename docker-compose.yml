
services:
  sso-app:
    build: .
    container_name: sso-app
    restart: unless-stopped
    environment:
      - GIT_COMMIT=${GIT_COMMIT:-unknown}
      - BUILD_DATE=${BUILD_DATE:-unknown}
      - VERSION=${VERSION:-1.0.0}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=sqlite:///data/sso_test.db
      - RP_ID=${RP_ID:-sso-app.visiquate.com}
      - RP_NAME=${RP_NAME:-SSO Test App}
      - ORIGIN=${ORIGIN:-https://sso-app.visiquate.com}
    volumes:
      - sso_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=sso-app"
      - "autoheal=true"

  watchtower:
    image: containrrr/watchtower
    container_name: sso-app-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_HTTP_API_UPDATE=true
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_TOKEN}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_SCOPE=sso-app
      - WATCHTOWER_HTTP_API_METRICS=true
    command: --interval 30 --scope sso-app
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=sso-app"
      - "autoheal=true"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/v1/update"]
      interval: 30s
      timeout: 10s
      retries: 3

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: sso-app-autoheal
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=5
      - AUTOHEAL_START_PERIOD=30
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=sso-app"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: sso-app-cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - app_network
    labels:
      - "com.centurylinklabs.watchtower.scope=sso-app"

volumes:
  sso_data:
    driver: local

networks:
  app_network:
    driver: bridge